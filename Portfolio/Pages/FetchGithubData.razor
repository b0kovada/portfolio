@page "/fetchgithubdata"
@using Portfolio.Models
@inject HttpClient Http

<PageTitle>Nyilvános GitHub Repository-k</PageTitle>

<section class="resume-section">
    <div class="resume-section-content">
        <h2 class="mb-5">Nyilvános GitHub Repository-k</h2>
        <p>Ez az oldal nyilvános repository-kat jelenít meg a GitHub-fiókomból: <strong>b0kovada</strong></p>

        @if (repositories == null)
        {
            <p><em>Repository-k betöltése...</em></p>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Név</th>
                            <th>Leírás</th>
                            <th>Létrehozva</th>
                            <th>Utolsó frissítés</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (HistoryItem repo in repositories)
                        {
                            <tr>
                                <td>
                                    <a target="_blank" rel="noopener" href=@repo.HTML_URL>
                                        @repo.Full_Name
                                    </a>
                                </td>
                                <td>@repo.Description</td>
                                <td>@repo.Created_At.ToShortDateString()</td>
                                <td>@repo.Updated_At.ToShortDateString()</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</section>


@code {
    List<HistoryItem>? repositories;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        repositories = await Http.GetFromJsonAsync<List<HistoryItem>>("https://api.github.com/users/b0kovada/repos");

        repositories = repositories?.OrderByDescending(x => x.Updated_At).ToList();
    }
}
